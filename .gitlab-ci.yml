image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  # Docker Hub에 이미지를 올릴 계정 정보
  DOCKER_REGISTRY: docker.io
  DOCKER_REPO: $DOCKER_USER/$APP_NAME   # 예: "mydockerid/spring-boot-app"

stages:
  - build
  - push
  - deploy

before_script:
  # docker:dind를 사용하기 위해 docker login / setup
  - docker login -u "$DOCKER_USER" -p "$DOCKER_PASSWORD" docker.io

build:
  stage: build
  script:
    - echo "===== Build Docker Image ====="
    - docker build -t $APP_NAME .
    - docker tag $APP_NAME $DOCKER_USER/$APP_NAME:latest

push:
  stage: push
  script:
    - echo "===== Push Docker Image to Registry ====="
    - docker push $APP_NAME
    - docker push $APP_NAME:latest

deploy:
  stage: deploy
  # 실제 배포는 main/master 브랜치에서만 수행하도록 예시
  only:
    - master
    - develop
  script:
    - echo "===== Deploy to EC2 ====="
    # SSH 설정
    - mkdir -p ~/.ssh
    - echo "$EC2_SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    
    - >
      ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa $EC2_USER@$EC2_HOST "
        # 배포하려는 Docker 이미지를 pull
        docker pull $APP_NAME:latest
        
        # 기존 컨테이너가 있다면 중지 및 제거
        docker stop spring-boot-app || true
        docker rm spring-boot-app || true
        
        # 새로운 컨테이너 실행
        docker run -d --name spring-boot-app \
          -p 8080:8080 \
          $APP_NAME:latest
      "
